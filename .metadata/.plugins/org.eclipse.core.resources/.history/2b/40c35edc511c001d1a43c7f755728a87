package org.jcaro.hibernateapp.entity;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

import org.hibernate.criterion.DetachedCriteria;

import jakarta.persistence.*;

@Entity
@Table(name = "clientes")
public class Cliente {
	
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Integer id;
	
	@Column
	private String nombre;
	
	@Column
	private String apellido;
	
	@Column(name = "forma_pago")
	private String formaDePago;
	
	@Embedded
	private Auditoria auditoria = new Auditoria();
	
	@OneToMany(cascade = CascadeType.ALL,orphanRemoval = true)
	//@JoinColumn(name = "id_cliente")
	@JoinTable(name = "tbl_cliente_direccion", joinColumns = @JoinColumn(name="id_cliente"),
				inverseJoinColumns = @JoinColumn(name ="id_direccion"), uniqueConstraints = @UniqueConstraint(columnNames  ="id_direccion"))
	private List<Direccion> direcciones;
	
	@OneToMany(cascade = CascadeType.ALL,orphanRemoval = true, mappedBy ="cliente")
	private List<Factura> facturas;
	
	@OneToOne
	@JoinColumn(name = "detalle_cliente_id")
	private DetachedCriteria detalle;
	
	public Cliente() {
		facturas = new ArrayList<Factura>();
		direcciones = new ArrayList<Direccion>();
	}

	public Cliente(Integer id, String nombre, String apellido, String formaDePago) {
		this();
		this.id = id;
		this.nombre = nombre;
		this.apellido = apellido;
		this.formaDePago = formaDePago;
	}
	

	public Cliente(String nombre, String apellido) {
		this();
		this.nombre = nombre;
		this.apellido = apellido;
	}
	
	public Cliente addClientes(Factura factura) {
		this.facturas.add(factura);
		factura.setCliente(this);
		
		return this;
	}

	public Integer getId() {
		return id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public String getNombre() {
		return nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	public String getApellido() {
		return apellido;
	}

	public void setApellido(String apellido) {
		this.apellido = apellido;
	}

	public String getFormaDePago() {
		return formaDePago;
	}

	public void setFormaDePago(String formaDePago) {
		this.formaDePago = formaDePago;
	}

	public List<Direccion> getDirecciones() {
		return direcciones;
	}

	public void setDirecciones(List<Direccion> direcciones) {
		this.direcciones = direcciones;
	}

	public Auditoria getAuditoria() {
		return auditoria;
	}

	public void setAuditoria(Auditoria auditoria) {
		this.auditoria = auditoria;
	}

	public List<Factura> getFacturas() {
		return facturas;
	}

	public void setFacturas(List<Factura> facturas) {
		this.facturas = facturas;
	}

	public DetachedCriteria getDetalle() {
		return detalle;
	}

	public void setDetalle(DetachedCriteria detalle) {
		this.detalle = detalle;
	}

	@Override
	public String toString() {
		return "Cliente [id=" + id + ", nombre=" + nombre + ", apellido=" + apellido + ", formaDePago=" + formaDePago
				+ ", auditoria=" + auditoria + ", direcciones=" + direcciones + ", facturas=" + facturas + ", detalle=" + detalle +"]";
	}



}
